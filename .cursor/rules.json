{
    "version": 1,
    "rules": [
        {
            "pattern": "src/main.py",
            "group": "Entry Points",
            "description": "Application bootstrap and initialization"
        },
        
        {
            "pattern": "src/infrastructure/hotkeys/*.py",
            "group": "Infrastructure/Hotkeys",
            "description": "Global hotkey handling across platforms"
        },
        {
            "pattern": "src/infrastructure/hotkeys/windows.py",
            "group": "Infrastructure/Hotkeys/Windows",
            "description": "Windows-specific hotkey implementation using Win32 API"
        },
        {
            "pattern": "src/infrastructure/hotkeys/base.py",
            "group": "Infrastructure/Hotkeys/Base",
            "description": "Abstract base class for hotkey handlers"
        },
        {
            "pattern": "src/infrastructure/audio/*.py",
            "group": "Infrastructure/Audio",
            "description": "Audio recording and processing functionality"
        },
        {
            "pattern": "src/infrastructure/audio/recorder.py",
            "group": "Infrastructure/Audio/Recording",
            "description": "Thread-safe audio recording implementation"
        },
        {
            "pattern": "src/infrastructure/transcription/*.py",
            "group": "Infrastructure/Transcription",
            "description": "Speech-to-text conversion services"
        },
        {
            "pattern": "src/infrastructure/transcription/transcriber.py",
            "group": "Infrastructure/Transcription/Core",
            "description": "Faster-Whisper based transcription implementation"
        },
        {
            "pattern": "src/infrastructure/persistence/*.py",
            "group": "Infrastructure/Persistence",
            "description": "Data storage and settings management"
        },
        {
            "pattern": "src/infrastructure/services/*.py",
            "group": "Infrastructure/Services",
            "description": "Infrastructure service implementations"
        },
        {
            "pattern": "src/infrastructure/services/recording_service.py",
            "group": "Infrastructure/Services/Recording",
            "description": "Recording service coordinating audio and transcription"
        },
        
        
        {
            "pattern": "src/presentation/system_tray.py",
            "group": "Presentation/SystemTray",
            "description": "System tray icon and menu implementation"
        },
        {
            "pattern": "src/presentation/windows/*.py",
            "group": "Presentation/Windows",
            "description": "Application windows and dialogs"
        },
        {
            "pattern": "src/presentation/windows/settings.py",
            "group": "Presentation/Windows/Settings",
            "description": "Settings window and configuration UI"
        },
        {
            "pattern": "src/presentation/resources/**/*",
            "group": "Presentation/Resources",
            "description": "UI resources like icons and images"
        },

        {
            "pattern": "src/domain/*.py",
            "group": "Domain",
            "description": "Core business logic and data models"
        },
        {
            "pattern": "src/domain/settings.py",
            "group": "Domain/Settings",
            "description": "Settings data models and validation"
        },
        
        {
            "pattern": "src/application/*.py",
            "group": "Application",
            "description": "Application services and use cases"
        },
        {
            "pattern": "src/application/recording_service.py",
            "group": "Application/Services",
            "description": "Recording service orchestration"
        },
        
        {
            "pattern": "tests/unit/**/*.py",
            "group": "Tests/Unit",
            "description": "Unit tests for individual components"
        },
        {
            "pattern": "tests/integration/**/*.py",
            "group": "Tests/Integration",
            "description": "Integration tests between components"
        },
        
        {
            "pattern": "**/__init__.py",
            "group": "Package",
            "description": "Package initialization files"
        },
        
        {
            "pattern": "pyproject.toml",
            "group": "Config",
            "description": "Project configuration and dependencies"
        },
        {
            "pattern": "poetry.lock",
            "group": "Config/Dependencies",
            "description": "Locked dependencies for reproducible builds"
        },
        
        {
            "pattern": "README.md",
            "group": "Documentation",
            "description": "Project documentation"
        },
        {
            "pattern": "docs/**/*",
            "group": "Documentation/Detailed",
            "description": "Detailed documentation files"
        },
        
        {
            "pattern": "scripts/**/*.py",
            "group": "Scripts",
            "description": "Utility scripts and tools"
        },
        {
            "pattern": "scripts/dev.py",
            "group": "Scripts/Development",
            "description": "Development helper scripts"
        },
        
        {
            "pattern": ".venv/Lib/site-packages/faster_whisper/**/*.py",
            "group": "External/Whisper",
            "description": "Faster-Whisper library implementation"
        },
        {
            "pattern": ".venv/Lib/site-packages/PySide6/**/*.py*",
            "group": "External/PySide6",
            "description": "PySide6 Qt bindings"
        }
    ],
    "groups": {
        "Entry Points": {
            "color": "#3498db",
            "icon": "rocket"
        },
        "Infrastructure": {
            "color": "#9b59b6",
            "icon": "server"
        },
        "Infrastructure/Hotkeys": {
            "color": "#8e44ad",
            "icon": "key"
        },
        "Infrastructure/Hotkeys/Windows": {
            "color": "#8e44ad",
            "icon": "desktop-download"
        },
        "Infrastructure/Hotkeys/Base": {
            "color": "#8e44ad",
            "icon": "file-binary"
        },
        "Infrastructure/Audio": {
            "color": "#2980b9",
            "icon": "unmute"
        },
        "Infrastructure/Audio/Recording": {
            "color": "#2980b9",
            "icon": "record"
        },
        "Infrastructure/Transcription": {
            "color": "#1abc9c",
            "icon": "megaphone"
        },
        "Infrastructure/Transcription/Core": {
            "color": "#1abc9c",
            "icon": "cpu"
        },
        "Infrastructure/Persistence": {
            "color": "#16a085",
            "icon": "database"
        },
        "Infrastructure/Services": {
            "color": "#27ae60",
            "icon": "gear"
        },
        "Infrastructure/Services/Recording": {
            "color": "#27ae60",
            "icon": "broadcast"
        },
        "Presentation": {
            "color": "#2ecc71",
            "icon": "browser"
        },
        "Presentation/SystemTray": {
            "color": "#2ecc71",
            "icon": "bell"
        },
        "Presentation/Windows": {
            "color": "#2ecc71",
            "icon": "window"
        },
        "Presentation/Windows/Settings": {
            "color": "#2ecc71",
            "icon": "settings"
        },
        "Presentation/Resources": {
            "color": "#2ecc71",
            "icon": "file-media"
        },
        "Domain": {
            "color": "#e74c3c",
            "icon": "package"
        },
        "Domain/Settings": {
            "color": "#e74c3c",
            "icon": "checklist"
        },
        "Application": {
            "color": "#f39c12",
            "icon": "circuit-board"
        },
        "Application/Services": {
            "color": "#f39c12",
            "icon": "plug"
        },
        "Tests": {
            "color": "#7f8c8d",
            "icon": "beaker"
        },
        "Tests/Unit": {
            "color": "#7f8c8d",
            "icon": "microscope"
        },
        "Tests/Integration": {
            "color": "#7f8c8d",
            "icon": "puzzle"
        },
        "Package": {
            "color": "#95a5a6",
            "icon": "package-dependencies"
        },
        "Config": {
            "color": "#f1c40f",
            "icon": "tools"
        },
        "Config/Dependencies": {
            "color": "#f1c40f",
            "icon": "versions"
        },
        "Documentation": {
            "color": "#3498db",
            "icon": "book"
        },
        "Documentation/Detailed": {
            "color": "#3498db",
            "icon": "file-text"
        },
        "Scripts": {
            "color": "#e67e22",
            "icon": "terminal"
        },
        "Scripts/Development": {
            "color": "#e67e22",
            "icon": "code"
        },
        "External": {
            "color": "#95a5a6",
            "icon": "package"
        },
        "External/Whisper": {
            "color": "#95a5a6",
            "icon": "ear"
        },
        "External/PySide6": {
            "color": "#95a5a6",
            "icon": "paintbrush"
        }
    },
    "conventions": {
        "naming": {
            "classes": "PascalCase",
            "methods": "snake_case",
            "constants": "UPPER_SNAKE_CASE",
            "private_members": "_leading_underscore"
        },
        "structure": {
            "max_file_length": 500,
            "max_class_length": 300,
            "max_method_length": 50,
            "max_params": 5
        },
        "documentation": {
            "required_sections": [
                "Args",
                "Returns",
                "Raises"
            ]
        },
        "architecture": {
            "dependencies": {
                "domain": [],
                "application": ["domain"],
                "infrastructure": ["domain", "application"],
                "presentation": ["domain", "application"]
            }
        },
        "threading": {
            "guidelines": [
                "Use locks for shared resources",
                "Avoid blocking the main thread",
                "Clean up threads on shutdown"
            ]
        },
        "error_handling": {
            "guidelines": [
                "Log all exceptions",
                "Use specific exception types",
                "Provide meaningful error messages"
            ]
        }
    }
}